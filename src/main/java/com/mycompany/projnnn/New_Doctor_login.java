/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projnnn;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alool
 */
public class New_Doctor_login extends javax.swing.JFrame {

    /**
     * Creates new form New_Doctor_login
     */
    public New_Doctor_login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Doc_in = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2_Doc_in = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jTextField00 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 40)); // NOI18N
        jLabel1.setText("Patients' Appointments");

        jButton1.setBackground(new java.awt.Color(255, 153, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("‚Üê Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable_Doc_in.setFont(new java.awt.Font("Segoe UI", 3, 16)); // NOI18N
        jTable_Doc_in.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "A_ID", "Date", "Time", "Description", "D_ID", "P_ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Doc_in.setToolTipText("");
        jScrollPane1.setViewportView(jTable_Doc_in);

        jButton4.setBackground(new java.awt.Color(153, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 3, 30)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("Search ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable2_Doc_in.setFont(new java.awt.Font("Segoe UI", 3, 16)); // NOI18N
        jTable2_Doc_in.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "A_ID", "Date", "Time", "Description", "D_ID", "P_ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2_Doc_in);

        jButton2.setBackground(new java.awt.Color(153, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 3, 30)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Show");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField00.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField00.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton3.setBackground(new java.awt.Color(153, 255, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("Search Info. for Patient");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(397, 397, 397)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(451, 451, 451)
                        .addComponent(jTextField00, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(398, 398, 398)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(8, 8, 8)
                        .addComponent(jTextField00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          NewJFrame f0 = new NewJFrame();
          f0.setVisible(true);  
          this.dispose(); 
    }//GEN-LAST:event_jButton1ActionPerformed

    
 // { Show APP., from Doctor login}
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            DefaultTableModel model = (DefaultTableModel) jTable_Doc_in.getModel();
            model.setRowCount(0);

            Connection con = null;
            PreparedStatement pstmt = null;
            ResultSet rs = null;
   try {
          DriverManager.registerDriver(new org.postgresql.Driver());
          String conninfo = "jdbc:postgresql://localhost:5432/postgres";
        
          con = DriverManager.getConnection(conninfo, "allii", "12345");
        
          String sql = "SELECT * FROM hwa.appointments";
          pstmt = con.prepareStatement(sql);
          rs = pstmt.executeQuery();
        
         while (rs.next()) {
            int a_id = rs.getInt("a_id");
            Date date = rs.getDate("date");
            Time time = rs.getTime("time");
            String description = rs.getString("description");
            int d_id = rs.getInt("d_id");
            int p_id = rs.getInt("p_id");

             model.addRow(new Object[]{a_id, date, time, description, d_id, p_id});
        }
    }catch (Exception ex) {     
        JOptionPane.showMessageDialog(null, "Error: " + ex.toString());
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
    // { Search App,from doctor login }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
            
        
            String text = jTextField00.getText();
        if (text == null || text.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Invalid input format !");
        }
     
        else{ 
            String searchText = jTextField00.getText().trim();
            DefaultTableModel model = (DefaultTableModel) jTable2_Doc_in.getModel();
            model.setRowCount(0);

           Connection con = null;
           PreparedStatement pstmt = null;
           ResultSet rs = null;
 
    try {
        DriverManager.registerDriver(new org.postgresql.Driver());
        String conninfo = "jdbc:postgresql://localhost:5432/postgres";
        con = DriverManager.getConnection(conninfo, "allii", "12345");

        String sql = "";
        if (searchText.matches("\\d+")) {  
            sql = "SELECT * FROM hwa.appointments WHERE a_id = ? OR d_id = ?";
            pstmt = con.prepareStatement(sql);
            int id = Integer.parseInt(searchText);
            pstmt.setInt(1, id);
            pstmt.setInt(2, id);
        }  

        rs = pstmt.executeQuery();

        if (!rs.isBeforeFirst()) { // no results found
            JOptionPane.showMessageDialog(null, "No records found for the search criteria: " + searchText);
            jTextField00.setText(null);
        } else {
            while (rs.next()) {
                int a_id = rs.getInt("a_id");
                Date date = rs.getDate("date");
                Time time = rs.getTime("time");
                String description = rs.getString("description");
                int d_id = rs.getInt("d_id");
                int p_id = rs.getInt("p_id");

                model.addRow(new Object[]{a_id, date, time, description, d_id, p_id});
            }
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "Error: " + ex.toString());
    }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    
    
    
         // Search by (P_ID) Pat. from Doctor log in
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       
         // Search by (P_ID) Pat. from Doctor log in
         
         String text = jTextField1.getText();
        if (text == null || text.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Invalid input format !");
        }
     
        else{
        
         String searchText = jTextField1.getText().trim();
         

         Connection con = null;
         PreparedStatement pstmt = null;
         ResultSet rs = null;

    try {
        DriverManager.registerDriver(new org.postgresql.Driver());
        String conninfo = "jdbc:postgresql://localhost:5432/postgres";
        con = DriverManager.getConnection(conninfo, "allii", "12345");

        String sql;
        boolean isNumeric = searchText.matches("\\d+"); // Check if the searchText is numeric

        if (isNumeric) {
            sql = "SELECT * FROM hwa.patients WHERE p_id = ?";
            pstmt = con.prepareStatement(sql);
            pstmt.setInt(1, Integer.parseInt(searchText));
        } else {
            sql = "SELECT * FROM hwa.patients WHERE first_name ILIKE ?";
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1, "%" + searchText + "%");
        }

        rs = pstmt.executeQuery();

        boolean found = false;
        while (rs.next()) {
            found = true;
            int p_id = rs.getInt("p_id");
            String f_n = rs.getString("first_name");
            String l_n = rs.getString("last_name");
            Date d_of_b = rs.getDate("dateofbirth");
            String gender = rs.getString("gender");
            String address = rs.getString("address");
            String phone = rs.getString("phone");
            String email = rs.getString("email");
            int history_id = rs.getInt("history_id");
            String blood_group = rs.getString("blood_group");
            
            JOptionPane.showMessageDialog(null,"P_ID: "+p_id +"\nF_N: "+f_n+"\nL_N: "+l_n+"\nD_of_B: "+d_of_b+"\nGender: "+gender+"\nAddress: "+address
            +"\nEmail: "+email+"\nHistory_id: "+history_id+"\nBlood_Group: "+blood_group);
            
        }

        if (!found) {
            JOptionPane.showMessageDialog(null, "No records found for the search criteria: " + searchText);
             jTextField1.setText(null);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    }
        } 
    }//GEN-LAST:event_jButton3ActionPerformed

    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(New_Doctor_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(New_Doctor_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(New_Doctor_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(New_Doctor_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new New_Doctor_login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2_Doc_in;
    private javax.swing.JTable jTable_Doc_in;
    private javax.swing.JTextField jTextField00;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
